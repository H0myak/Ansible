# Managed by ansible 

vcl 4.0;

{% for module in  modules  %}
import {{ module }};
{% endfor %}

{% for probe in  probes.values() %}
probe {{ probe.name }} {
    .url = "{{ probe.url }}";
    .timeout = {{ probe.timeout }};
    .interval = {{ probe.interval }};
    .window = {{ probe.window }};
    .threshold = {{ probe.threshold }};
}
{% endfor %}

{% for backend in  backends.values() %}
backend {{ backend.name }} {
    .host = "{{ backend.host }}";
    .port = "{{ backend.port }}";
    .probe = {{ backend.probe }};
}
{% endfor %}

{% if lb == true %}
sub vcl_init {
{% for lb_site in  lb_sites.values() %}
    new {{ lb_site.name }} = directors.round_robin();
{% for lb_unit in  lb_site.units %}
    {{ lb_site.name }}.add_backend({{ lb_unit }});
{% endfor %}
}
{% endfor %}
{% endif %}

sub vcl_recv {
{% if unset_user_cookie == true %}
    if (req.http.cookie ~ "^\s*$") {
        unset req.http.cookie;
        }
{% endif %}
    unset req.http.X-Forwarded-For;
    set req.http.X-Forwarded-For = client.ip;


    if (req.http.host ~ "example.com") {
        if (req.http.cookie ~ "^\s*$") {
           unset req.http.cookie;
           }
    unset req.http.X-Forwarded-For;
    set req.http.X-Forwarded-For = client.ip;
    set req.backend_hint = test.backend();
    }
}

sub vcl_backend_response {
    if (bereq.url ~ "(7z|avi|bz2|flac|flv|gz|mka|mkv|mov|mp3|mp4|mpeg|png|mpg|ogg|ogm|opus|rar|tar|tgz|tbz|txz|wav|webm|xz|zip)") {
        unset beresp.http.cookie;
        set beresp.http.cache-control = "static, max-age=600";
        set beresp.storage_hint = "static";
        set beresp.http.x-storage = "static";
        set beresp.ttl = 5m;
        }
    if (beresp.http.Cache-Control ~ "(?i)no-cache") {
        set beresp.uncacheable = true;
        }
    set beresp.uncacheable = true;
}

sub vcl_deliver {
    unset resp.http.Via;
    unset resp.http.X-Whatever;
    unset resp.http.X-Varnish;
    unset resp.http.Age;
}

sub vcl_backend_error {

    if(beresp.status == 503) {
        set beresp.status = 666;
        synthetic({"Something going wrong..."});
    }
    return (deliver);
}
